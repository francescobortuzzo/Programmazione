#BlueJ class context
comment0.target=Esercitazione
comment0.text=\r\n\ \r\n\ LABORATORIO\ DI\ PROGRAMMAZIONE\r\n\ a.a.\ 2021-22\r\n\ \r\n\ Esercitazione\ sulla\ codifica\ in\ Java\r\n\ 31/03/2022\r\n\ \r\n\ Della\ Giustina\ Lorenzo\r\n\ \r\n
comment1.params=btr
comment1.target=java.lang.String\ btrSucc(java.lang.String)
comment1.text=\r\n\ PARTE\ I\r\n\ \r\n\ Dato\ un\ intero\ non\ negativo\ in\ notazione\ ternaria\ bilanciata\ (stringa\ di\ cifre\ \u2013/./+),\ la\ seguente\ procedura\ in\ Scheme\r\n\ restituisce\ la\ rappresentazione\ dell\u2019intero\ successivo,\ calcolata\ operando\ direttamente\ sulle\ cifre\ a\ livello\ testuale\:\r\n\ \r\n\ (define\ btr-succ\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ;\ val\:\ stringa\ di\ -/./+\r\n\ \ (lambda\ (btr)\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ;\ btr\:\ stringa\ di\ -/./+\r\n\ \ \ (let\ ((n\ (string-length\ btr)))\ \ \ \ \ \ \ \ \ \ \ \ ;\ (brt\ \=\ "."\ oppure\ inizia\ con\ "+")\r\n\ \ \ \ (let\ ((lsb\ (string-ref\ btr\ (-\ n\ 1))))\r\n\ \ \ \ \ (if\ (\=\ n\ 1)\r\n\ \ \ \ \ \ \ \ \ (if\ (char\=?\ lsb\ \#\\+)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ "+-"\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ "+")\r\n\ \ \ \ \ \ \ \ \ (let\ ((pre\ (substring\ btr\ 0\ (-\ n\ 1))))\r\n\ \ \ \ \ \ \ \ \ \ (if\ (char\=?\ lsb\ \#\\+)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ (string-append\ (btr-succ\ pre)\ "-")\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ (string-append\ pre\ (if\ (char\=?\ lsb\ \#\\-)\ "."\ "+"))\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ ))\r\n\ \ \ \ \ \ \ \ \ )))\r\n\ \ \ ))\r\n\ \ \ \r\n\ Traduci\ in\ Java\ la\ procedura\ btr-succ\ e\ verifica\ sperimentalmente\ che\ i\ risultati\ siano\ consistenti\ con\ quelli\ ottenuti\r\n\ applicando\ la\ procedura\ riportata\ sopra\ nell\u2019ambiente\ DrRacket.\r\n
comment2.params=bit
comment2.target=java.lang.String\ bitComplement(java.lang.String)
comment2.text=\r\n\ PARTE\ II\r\n\ \r\n\ Considera\ il\ programma\ in\ Scheme\ per\ realizzare\ la\ procedura\ ones-complement\ che,\ data\ una\ stringa\ di\ bit,\r\n\ restituisce\ la\ rappresentazione\ del\ corrispondente\ complemento\ a\ uno,\ in\ cui\ le\ cifre\ 0\ e\ 1\ sono\ \u201Cscambiate\u201D\ fra\ loro\r\n\ (sorgenti\ Scheme\:\ recursion_strings.scm\ di\ cui\ \u00E8\ riportato\ il\ link\ anche\ a\ fianco\ di\ questo\ testo).\r\n\ Prova\ a\ trasformare\ il\ programma\ per\ realizzarne\ una\ versione\ imperativa\ in\ Java,\ che\ non\ si\ avvalga\ della\ ricorsione\r\n\ ma\ applichi\ il\ costrutto\ for\ per\ l\u2019iterazione.\r\n\ Sperimenta\ infine\ il\ programma\ nell\u2019ambiente\ BlueJ\ oppure\ DrJava\ e\ verificane\ i\ risultati.\r\n\ \r\n\ (define\ bit-complement\ \ \ ;\ val\:\ stringa\r\n\ \ (lambda\ (bit)\ \ \ \ \ \ \ \ \ \ ;\ bit\:\ stringa\r\n\ \ \ (if\ (string\=?\ bit\ "0")\r\n\ \ \ \ \ \ \ "1"\r\n\ \ \ \ \ \ \ "0"\r\n\ \ \ )))\r\n\ \r\n\ (define\ ones-complement\ \ ;\ val\:\ stringa\ di\ 0/1\r\n\ \ (lambda\ (bin)\ \ \ \ \ \ \ \ \ \ ;\ bin\:\ stringa\ di\ 0/1\r\n\ \ \ (if\ (string\=?\ bin\ "")\r\n\ \ \ \ \ \ \ ""\r\n\ \ \ \ \ \ \ (string-append\r\n\ \ \ \ \ \ \ \ (ones-complement\ (substring\ bin\ 0\ (-\ (string-length\ bin)\ 1)))\r\n\ \ \ \ \ \ \ \ (bit-complement\ (substring\ bin\ (-\ (string-length\ bin)\ 1)))\r\n\ \ \ \ \ \ \ \ ))))\r\n
comment3.params=bin
comment3.target=java.lang.String\ onesComplement(java.lang.String)
numComments=4
